version: "2.4"

services:
  my-mongodb:
    hostname: my-mongodb
    image: mongo:4.4
    container_name: my-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_SERVER: ${MONGO_SERVER}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_FLDB_DATABASE: ${MONGO_FLDB}

    ports:
      - ${MONGO_PORT}:27017
    links:
      - keycloak
    env_file: .env
    volumes:
      - ./volumes/mongo_data:/data/db
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
        open-vre:
            ipv4_address: 172.21.0.10
  mongo_seed:
    container_name: mongo_seed
    image: mongo
    links:
      - my-mongodb
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_SERVER: ${MONGO_SERVER}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_FLDATABASE: ${MONGO_FLDB}
    volumes:
      - ./mongo-seed:/mongo-seed
      - ./volumes/shared_data:/shared_data
      - ./install_data:/install_data
      - ./volumes/rabbitmq:/rabbitmq_data
    command:
      /mongo-seed/import.sh
    networks:
      - open-vre


  postgres:
    container_name: postgres
    image: postgres
    environment:
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      open-vre:
        ipv4_address: 172.21.0.13
    volumes:
      - ./volumes/pg_data:/var/lib/postgresql/data


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:15.0.2
    environment:
        DB_VENDOR: ${DB_VENDOR}
        DB_ADDR: ${DB_ADDR}
        DB_DATABASE: ${DB_DATABASE}
        DB_USER: ${DB_USER}
        DB_SCHEMA: ${DB_SCHEMA}
        DB_PASSWORD: ${DB_PASSWORD}
        KEYCLOAK_USER: ${KEYCLOAK_USER}
        KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
        PROXY_ADDRESS_FORWARDING: "false"
        KEYCLOAK_FRONTEND_URL: ${FQDN_HOST_PROTOCOL}://${FQDN_HOST}:${KEYCLOAK_PORT}/auth

    volumes:
        - ./keycloak/realms:/opt/jboss/keycloak/imports
    command:
            - '-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/opt/jboss/keycloak/imports/open-vre.json -Dkeycloak.migration.strategy=IGNORE_EXISTING'
    ports:
        - ${KEYCLOAK_PORT}:8080
    links:
        - postgres
    networks:
              open-vre:
                ipv4_address: 172.21.0.12
    depends_on:
      - postgres

  sgecore:
    build:
      context: ./sge
      #network: host
    environment:
      - DOCKER_GROUP:${DOCKER_GROUP}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./sge:/sge
      - ./sge/configuration:/tmp/configuration
      - ./sge/configuration:/etc/gridengine/configuration
      - ./volumes/shared_data:/shared_data
    container_name: sgecore
    hostname: sgecore
    stdin_open: true
    networks:
      - open-vre
        #- shared
    ports:
      - 6444:6444

  front_end:
    container_name: front_end
    hostname: front_end.dockerized_vre_open-vre
    extra_hosts:
      - "${FQDN_HOST}:172.21.0.1"
    build:
      context: './front_end/'
      #network: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./front_end/act_qmaster:/var/lib/gridengine/default/common/act_qmaster
      - ./volumes/openVRE/config:/var/www/html/openVRE/config
      - ./volumes/openVRE/tools:/var/www/html/openVRE/public/tools
      - ./volumes/shared_data:/shared_data
    environment:
      - DOCKER_GROUP:${DOCKER_GROUP}
    links:
      - my-mongodb
      - keycloak
    depends_on:
      - sgecore
    ports:
      - "8089:80"
      - "5000:5000"
    networks:
      #shared:
              open-vre:
                ipv4_address: 172.21.0.14
  rabbitmq:
    image: rabbitmq:3-management
    hostname: my-rabbit
    volumes:
      - ./volumes/rabbitmq/certificates:/etc/rabbitmq/certs
      - ./volumes/rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./volumes/rabbitmq/conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./volumes/rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./volumes/rabbitmq/logs:/var/log/rabbitmq/log
    environment:
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

    ports:
      - 5671:5671
      - 15672:15672

    entrypoint: sh -c "rabbitmq-server & sleep 10; rabbitmq-plugins enable rabbitmq_auth_backend_http ; rabbitmqctl add_user centre1 password && rabbitmqctl set_user_tags centre1 keycloak && rabbitmqctl set_permissions -p rabbit_server centre1 "." "." "." ; rabbitmqctl add_user centre2 password && rabbitmqctl set_user_tags centre2 keycloak && rabbitmqctl set_permissions -p rabbit_server centre2 "." "." "." ; rabbitmqctl add_user centre3 password && rabbitmqctl set_user_tags centre3 keycloak && rabbitmqctl set_permissions -p rabbit_server centre3 "." "." "." ; rabbitmqctl add_user centre4 password && rabbitmqctl set_user_tags centre4 keycloak && rabbitmqctl set_permissions -p rabbit_server centre4 "." "." "." ; rabbitmqctl add_user centre5 password && rabbitmqctl set_user_tags centre5 keycloak && rabbitmqctl set_permissions -p rabbit_server centre5 "." "." "."; rabbitmqctl add_user centre6 password && rabbitmqctl set_user_tags centre6 keycloak && rabbitmqctl set_permissions -p rabbit_server centre6 "." "." "."; rabbitmqctl add_user centre7 password && rabbitmqctl set_user_tags centre7 keycloak && rabbitmqctl set_permissions -p rabbit_server centre7 "." "." "."; rabbitmqctl add_user centre8 password && rabbitmqctl set_user_tags centre8 keycloak && rabbitmqctl set_permissions -p rabbit_server centre8 "." "." "."; rabbitmqctl add_user centre9 DM2023FLcentre9 && rabbitmqctl set_user_tags centre9 keycloak && rabbitmqctl set_permissions -p rabbit_server centre9 "." "." "."; rabbitmqctl add_user centre10 password && rabbitmqctl set_user_tags centre10 keycloak && rabbitmqctl set_permissions -p rabbit_server centre10 "." "." "."; rabbitmqctl add_user user1 password && rabbitmqctl set_user_tags user1 keycloak && rabbitmqctl set_permissions -p rabbit_server user1 "." "." "."; tail -f /dev/null"


networks:
  open-vre:
    #Use on openStack cloud
    #driver_opts:
    #  com.docker.network.driver.mtu: 1442
    ipam:
      config:
            - subnet: 172.21.0.0/24
volumes:
  shared_data:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: ./volumes/shared_data
